apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-init-scripts
  labels:
    app: postgresql
    app.kubernetes.io/name: postgresql
data:
  # Production-ready initialization script
  00-init-production.sql: |
    -- Enable essential extensions by default
    CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
    CREATE EXTENSION IF NOT EXISTS pg_trgm;
    CREATE EXTENSION IF NOT EXISTS uuid-ossp;

    -- Create monitoring user for health checks
    CREATE USER monitoring WITH PASSWORD 'monitoring_pass';
    GRANT pg_monitor TO monitoring;
    GRANT CONNECT ON DATABASE mydb TO monitoring;

    -- Basic performance settings (will be applied on restart)
    ALTER SYSTEM SET shared_buffers = '256MB';
    ALTER SYSTEM SET effective_cache_size = '1GB';
    ALTER SYSTEM SET maintenance_work_mem = '64MB';
    ALTER SYSTEM SET work_mem = '4MB';
    ALTER SYSTEM SET max_connections = 200;

    -- WAL settings for better performance
    ALTER SYSTEM SET wal_level = 'replica';
    ALTER SYSTEM SET max_wal_size = '1GB';
    ALTER SYSTEM SET min_wal_size = '80MB';

    -- Enable query logging for slow queries
    ALTER SYSTEM SET log_min_duration_statement = 500;
    ALTER SYSTEM SET log_checkpoints = 'on';
    ALTER SYSTEM SET log_connections = 'on';

    -- Apply configuration
    SELECT pg_reload_conf();

    RAISE NOTICE 'Production settings applied successfully!';
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
  labels:
    app: postgresql
    app.kubernetes.io/name: postgresql
data:
  # Custom PostgreSQL configuration file
  postgresql.conf: |
    # Dockify PostgreSQL Production Configuration
    # Optimized for containerized environments

    # Connection Settings
    listen_addresses = '*'
    max_connections = 200

    # Memory Settings (for 2GB limit)
    shared_buffers = 512MB
    effective_cache_size = 1536MB
    maintenance_work_mem = 128MB
    work_mem = 4MB

    # Checkpoint Settings
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB

    # Logging
    log_min_duration_statement = 500
    log_checkpoints = on
    log_connections = on
    log_lock_waits = on

    # Autovacuum
    autovacuum = on
    autovacuum_max_workers = 4
    autovacuum_naptime = 30

  pg_hba.conf: |
    # PostgreSQL Client Authentication Configuration
    # TYPE  DATABASE        USER            ADDRESS                 METHOD

    # Allow local connections
    local   all             all                                     scram-sha-256

    # Allow connections from any pod in the cluster
    host    all             all             0.0.0.0/0               scram-sha-256

    # Allow monitoring user for health checks
    host    all             monitoring      0.0.0.0/0               md5