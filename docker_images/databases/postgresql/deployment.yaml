apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      initContainers:
        - name: generate-ssl-certs
          image: postgres:17.2-alpine
          command:
            - /bin/sh
            - -c
            - |
              if [ ! -f /ssl/server.crt ]; then
                apk add --no-cache openssl
                openssl req -new -x509 -days 3650 -nodes -text \
                  -out /ssl/server.crt \
                  -keyout /ssl/server.key \
                  -subj "/CN=postgresql.local"
                chmod 0600 /ssl/server.key
                chown 70:70 /ssl/server.key /ssl/server.crt
              fi
          volumeMounts:
            - name: ssl-certs
              mountPath: /ssl
      containers:
        - name: postgresql
          image: postgres:17.2-alpine
          command:
            - postgres
            - -c
            - ssl=on
            - -c
            - ssl_cert_file=/ssl/server.crt
            - -c
            - ssl_key_file=/ssl/server.key
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: password
            - name: POSTGRES_DB
              value: "mydb"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
            - name: postgresql-storage
              mountPath: /var/lib/postgresql/data
            - name: ssl-certs
              mountPath: /ssl
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U $POSTGRES_USER
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U $POSTGRES_USER
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: postgresql-storage
          persistentVolumeClaim:
            claimName: postgresql-pvc
        - name: ssl-certs
          emptyDir: {}
