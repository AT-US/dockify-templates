apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgbouncer
  labels:
    app: pgbouncer
    app.kubernetes.io/name: pgbouncer
    app.kubernetes.io/component: connection-pooler
    app.kubernetes.io/part-of: postgresql-cluster
spec:
  replicas: 1  # Start with 1 for testing
  selector:
    matchLabels:
      app: pgbouncer
      app.kubernetes.io/name: pgbouncer
  template:
    metadata:
      labels:
        app: pgbouncer
        app.kubernetes.io/name: pgbouncer
        app.kubernetes.io/component: connection-pooler
        app.kubernetes.io/part-of: postgresql-cluster
    spec:
      containers:
        - name: pgbouncer
          # Use the simple Alpine version without complex entrypoint
          image: edoburu/pgbouncer:1.18.0
          ports:
            - containerPort: 6432
              name: pgbouncer
          env:
            # Connection settings
            - name: DATABASE_URL
              value: "postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgresql:5432/mydb"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: password
            # PgBouncer settings
            - name: POOL_MODE
              value: "transaction"
            - name: MAX_CLIENT_CONN
              value: "1000"
            - name: DEFAULT_POOL_SIZE
              value: "25"
            - name: SERVER_IDLE_TIMEOUT
              value: "600"
            # Auth
            - name: AUTH_TYPE
              value: "plain"
            - name: AUTH_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: username
          volumeMounts:
            - name: pgbouncer-config
              mountPath: /etc/pgbouncer
              readOnly: false  # Allow writes
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          # Simple health checks
          livenessProbe:
            tcpSocket:
              port: 6432
            initialDelaySeconds: 15
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 6432
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
      volumes:
        - name: pgbouncer-config
          emptyDir: {}  # Writable directory for config
      # Run as non-root but allow writes to emptyDir
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: pgbouncer
  labels:
    app: pgbouncer
    app.kubernetes.io/name: pgbouncer
spec:
  type: ClusterIP
  ports:
    - port: 6432
      targetPort: 6432
      protocol: TCP
      name: pgbouncer
  selector:
    app.kubernetes.io/name: pgbouncer